/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package video;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;

/**
 *
 * @author goryunov
 */
public class VideoPanel extends javax.swing.JPanel {

    //private int i=0;
    
    /**
     * Creates new form VideoPanel
     */
    public VideoPanel() {
        initComponents();
        //this.setBackground(new java.awt.Color(25, 255, 255));
        //this.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    @Override
    public void paintComponent(Graphics g) {

        super.paintComponent(g);
        /*Graphics2D g2 = (Graphics2D)g.create();

        g2.setBackground(Color.WHITE);
        g2.setColor(Color.WHITE);*/
        //g2.fillRect(0, 0, this.getWidth()/*-1*/, this.getHeight()/*-1*/);
        
        //g2.setColor(Color.BLUE);
        //g2.fillRect(i++, 100, 10, 10);
        
        /*movingLine.paintComponent(g);
        for (int i = 0; i < this.getModel().getColFigures().size(); i++)
            this.getModel().getColFigures().get(i).paintComponent(g);*/
        //g2.dispose();

    }

    public void setSize(BufferedImage image, MainFrame frame) {
        //if (this.getSize().getWidth()!=image.getWidth() || this.getSize().getHeight()!=image.getHeight()) {
            //this.setSize(image.getWidth(),image.getHeight());
            //frame.repaint();
            //frame.pack();
        //}
        //this.getGraphics().drawImage(image, 0, 0, this);
    }
    
    public void setImage(BufferedImage image) {
        if (this.getSize().getWidth()!=image.getWidth() || this.getSize().getHeight()!=image.getHeight()) {
            this.setSize(image.getWidth(),image.getHeight());
            //frame.pack();
            //frame.repaint();
            //frame.setSize(1000, 800);
        }
        this.getGraphics().drawImage(image, 0, 0, this);
        //setBufferedImage(image);
        //frame.doLayout();
    }
    
    private BufferedImage bufImg = null;
    
    public void setBufferedImage(BufferedImage image) {
        bufImg = image;
    }
    
    public BufferedImage getBufferedImage() {
        return bufImg;
    }
}
